"\n"
"\n"
"NAME\n"
"\n"
"\n"
"INTRONPROSPECTOR — Extract putative junctions from RNA-Seq alignments\n"
"\n"
"\n"
"\n"
"SYNOPSIS\n"
"\n"
"\n"
"intronProspector [options] [readaligns]\n"
"\n"
"\n"
"\n"
"DESCRIPTION\n"
"\n"
"\n"
"Find putative intron junctions in a RNA-Seq alignment. The _readaligns_\n"
"file maybe in SAM, BAM, or CRAM format and does not need to be sorted or\n"
"indexed and maybe streamed. If omitted, stdin is used.\n"
"\n"
"This program allows for calling splice junctions indebtedness of the\n"
"alignment program. It maybe used in a pipeline, copying the alignment\n"
"file on stdin to stdout. It can sit between an aligner outputting SAM\n"
"and samtools to convert to BAM/CRAM.\n"
"\n"
"\n"
"Options\n"
"\n"
"-h, --help\n"
"\n"
"  Prints brief usage information.\n"
"\n"
"-v, --version\n"
"\n"
"  Prints the current version number.\n"
"\n"
"-a INT, --min-anchor-length=INT\n"
"\n"
"  Minimum anchor length. Junctions which satisfy a minimum anchor length\n"
"  on both sides are reported. Mismatch bases don’t count towards the\n"
"  meeting this threshold. The default is 8 bases.\n"
"\n"
"-i INT, --min-intron_length=INT\n"
"\n"
"  Minimum intron length. The default is 70 bases.\n"
"\n"
"-I INT,  --max-intron_length=INT\n"
"\n"
"  Maximum intron length. The default is 500000 bases.\n"
"\n"
"-s STRING, --strandness=STRING\n"
"\n"
"  Strand specificity of RNA library preparation. Use UN for unstranded,\n"
"  RF for first-strand, FR for second-strand (case-insensitive). The\n"
"  default is UN. This is used to set the strand in the junction-format\n"
"  BED file.\n"
"\n"
"-U, --map-to-ucsc > Naively generate UCSC chromosome names in TSV and\n"
"BED files. This pre-pends chr to numeric and X/Y names and change MT to\n"
"chrMT, other name are not modified. This will not produce the correct\n"
"results for other sequences such as alts, patches, and unmapped\n"
"sequences. It does not modify records passed through (-p).\n"
"\n"
"-c FILE, --intron-calls=FILE\n"
"\n"
"  Write a tab-separated values (TSV) file, with the junctions calls. It\n"
"  will contain the following columns : * chrom - chromosome name *\n"
"  intron_start - zero based starting coordinates of intron. * intron_end\n"
"  - zero based ending coordinates of intron. * strand - +, -, or . if\n"
"  not known. * uniq_mapped_count - number of uniquely mapped reads\n"
"  supporting the junction. * multi_mapped_count - number of uniquely\n"
"  mapped reads supporting the junction. * unsure_mapped_count - number\n"
"  of reads that are either in discordant or partial mapped pair or do\n"
"  not have the BAM NH tag. * max_left_overhang - maximum number of bases\n"
"  overlapping the exon upstream of the intron. * max_right_overhang -\n"
"  maximum number of bases overlapping the exon downstream of the intron.\n"
"\n"
"-j FILE, --junction-bed=FILE\n"
"\n"
"  Write the junction calls and support anchors to this file. This is in\n"
"  the same format as ToHat junctions.bed and regtools junction extract\n"
"  output. It UCSC BED track, with each junction consists of two\n"
"  connected BED blocks, where each block is as long as the maximal\n"
"  overhang of any read spanning the junction. The score is the number of\n"
"  alignments spanning the junction, with a maximum score of 1000 for\n"
"  UCSC browser compatibility.\n"
"\n"
"-n FILE, --intron-bed=FILE\n"
"\n"
"  Write the intron BED with the bounds of the intron. The score is the\n"
"  number of alignments spanning the junction, with a maximum score of\n"
"  1000 for UCSC browser compatibility.\n"
"\n"
"-p FILE, --pass-through=FILE\n"
"\n"
"  Pass through input BAM/SAM records to this file, used for constructing\n"
"  pipelines with /dev/stdin is specified. CRAM output is not support,\n"
"  these will be written as BAM.\n"
"\n"
"\n"
"\n"
"EXAMPLES\n"
"\n"
"\n"
"Call junctions from a BAM file, also creating BEDs of junctions and\n"
"introns:\n"
"\n"
"    intronProspector --intron-calls=introns.tsv --junction-bed=juncs.bed --intron-bed=introns.bed reads.bam\n"
"\n"
"Pipeline to call introns and create a CRAM file:\n"
"\n"
"    cat reads.sam \\n"
"        | samtools sort -O sam  \\n"
"        | ./intronProspector -c introns.tsv -p /dev/stdout \\n"
"        | samtools view -O CRAM -T grch38.fa >reads.cram\n"
"\n"
"Note that the cat command could be an aligner output a SAM file and that\n"
"the genome FASTA file must be index by samtools faidx.\n"
"\n"
"\n"
"\n"
"BUGS\n"
"\n"
"\n"
"See GitHub Issues: https://github.com/diekhans/intronProspector/issues\n"
"\n"
"\n"
"\n"
"AUTHOR\n"
"\n"
"\n"
"Mark Diekhans markd@ucsc.edu\n"
"\n"
"Source available from https://github.com/diekhans/intronProspector\n"
"\n"
"Base on code from RegTools https://github.com/griffithlab/regtools by\n"
"Avinash Ramu aramu@genome.wustl.edu.\n"
