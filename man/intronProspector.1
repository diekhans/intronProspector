.\" Automatically generated by Pandoc 3.6.3
.\"
.TH "intronProspector" "1" "March 15, 2025" "Call intron junctions"
.SH NAME
\f[B]intronProspector\f[R] \[em] Extract putative intron junctions from
RNA\-Seq alignments
.SH SYNOPSIS
\f[CR]intronProspector [options] [readaligns ...]\f[R]
.SH DESCRIPTION
Find putative intron junctions in a RNA\-Seq alignment.
The \f[I]readaligns\f[R] files maybe in SAM, BAM, or CRAM format and
does not need to be sorted or indexed and maybe streamed.
If omitted, stdin is used.
.PP
This program allows for integrating splice junction calling into an
alignment pipeline.
Pass\-through mode copys the alignment file on \f[CR]stdin\f[R] to
\f[CR]stdout\f[R].
It can then sit between an aligner outputting SAM and
\f[CR]samtools\f[R] that converts to BAM/CRAM.
.PP
Both short\-read (Illumina) and long\-read RNA\-Seq can be process.
For short\-reads, it is recommended to use
\f[CR]\-\-min\-confidence\-score=1.0\f[R].
Introns are as determined by the aligner and indicated in the BAM by
\f[CR]N\f[R] operations.
.PP
Process multiple BAMs at once will use more more memory, as intron
counts are not collected per chromosome.
This mode does not require a sorted BAM and is incompatible with
\f[CR]\-\-pass\-through\f[R].
It may also improve the confidence scoring in some cases.
.SH OPTIONS
\f[CR]\-h, \-\-help\f[R]
.RS
.PP
Prints brief usage information.
.RE
.PP
\f[CR]\-v, \-\-version\f[R]
.RS
.PP
Prints the current version number.
.RE
.PP
\f[CR]\-a INT, \-\-min\-anchor\-length=INT\f[R]
.RS
.PP
Minimum anchor length.
Junctions which satisfy a minimum anchor length on both sides are
reported.
Mismatch bases don\[cq]t count towards the meeting this threshold.
The default is 8 bases.
.RE
.PP
\f[CR]\-i INT, \-\-min\-intron\-length=INT\f[R]
.RS
.PP
Minimum intron length.
The default is 70 bases.
.RE
.PP
\f[CR]\-I INT,  \-\-max\-intron\-length=INT\f[R]
.RS
.PP
Maximum intron length.
The default is 500000 bases.
.RE
.PP
\f[CR]\-d,  \-\-allow\-anchor\-indels\f[R]
.RS
.PP
Are indels allowed in anchors?
Useful for ONT reads.
Indels bases don\[cq]t count towards the meeting the anchor size
threshold.
The default is don\[cq]t allow indels.
\&.
.RE
.PP
\f[CR]\-m INT,  \-\-max\-anchor\-indel\-size=INT\f[R]
.RS
.PP
Maximum size of any contiguous indel in an anchor if indels are allowed
in anchors.
Exceeding this length discards the intron.
The default is 36.
.RE
.PP
\f[CR]\-C FLOAT, \-\-min\-confidence\-score=FLOAT\f[R]
.RS
.PP
Calculate the Shannon\-Wiener Diversity Index to use as a confidence
score and discard intron calls below this value.
The default is 0.0, which discards no calls.
A value of 1.0 is a good threshold for filtering.
This methodology it taken from JuncBASE DOI: 10.1101/gr.108662.110.
.RE
.PP
\f[CR]\-s STRING, \-\-strandness=STRING\f[R]
.PP
\f[CR]\-u, \-\-unsorted\f[R]
.RS
.PP
SAM/BAM files are not sorted.
This will require more memory, as intron counts are not collected per
chromosome.
.RE
.RS
.PP
Strand specificity of RNA library preparation.
Use \f[CR]UN\f[R] for unstranded, \f[CR]RF\f[R] for first\-strand,
\f[CR]FR\f[R] for second\-strand (case\-insensitive).
The default is \f[CR]UN\f[R].
This is used to set the strand in the junction\-format BED file.
.RE
.PP
\f[CR]\-g fasta, \-\-genome\-fasta=fasta\f[R]
.RS
.PP
Genome FASTA file, must be indexed by \f[CR]samtools faidx\f[R].
Donor and acceptor dinuclotides are identified if provided.
.RE
.PP
\f[CR]\-S, \-\-skip\-missing\-targets\f[R]
.PP
\f[CR]\-X category, \-\-exclude=category\f[R]
.RS
.PP
Exclude reads or introns from this category.
Current categories are: \f[I]multi\f[R] \- excluding multi\-mapped
reads.
.RE
.PP
\f[CR]\-\-set\-XS\-strand\-tag\f[R]
.RS
.PP
Set the XS:A tag to the strand if stand for a read can be determined
from the introns based on a count of recognized vs unrecognized splice
sites.
If the strand can\[cq]t be determined, the tags are not modified,
possible leaving an existing XS:A tag in place.
Requires \f[CR]\-\-pass\-through\f[R] and \f[CR]\-\-genome\-fasta\f[R].
.RE
.PP
\f[CR]\-\-set\-TS\-strand\-tag\f[R]
.RS
.PP
Set the TS:A tag in the same manner as
\f[CR]\-\-set\-XS\-strand\-tag\f[R].
.RE
.RS
.PP
Skip getting splice junctions when target sequence is missing in genome
FASTA rather than generate an error and stop.
.RE
.PP
\f[CR]\-c FILE, \-\-intron\-calls=FILE\f[R]
.RS
.PP
Write a tab\-separated values (TSV) file, with the junctions calls.
It will contain the following columns : * chrom \- chromosome name *
intron_start \- zero based starting coordinates of intron.
* intron_end \- zero based ending coordinates of intron.
* strand \- \f[CR]+\f[R], \f[CR]\-\f[R], or \f[CR].\f[R] if not known.
This is set only if experiment is stranded, it is not set from genomic
sequence.
* uniq_mapped_count \- number of uniquely mapped reads supporting the
junction.
* multi_mapped_count \- number of uniquely mapped reads supporting the
junction.
* unsure_mapped_count \- number of reads that are either in discordant
or partial mapped pair or do not have the BAM \f[CR]NH\f[R] tag.
* max_left_overhang \- maximum number of bases overlapping the exon
upstream of the intron.
* max_right_overhang \- maximum number of bases overlapping the exon
downstream of the intron.
* confidence \- confidence score.
* splice_sites \- Donor\-acceptor pair, if genome provided.
In upper\-case for known splicing patterns, lower\-case for unknown.
If strand is not known, this field is empty.
.RE
.PP
\f[CR]\-j FILE, \-\-junction\-bed=FILE\f[R]
.RS
.PP
Write the junction calls and support anchors to this BED 12 file.
This is in the same format as TopHat \f[CR]junctions.bed\f[R] and
\f[CR]regtools junction extract\f[R] output.
It is a UCSC BED track, with each junction consists of two connected BED
blocks, where each block is as long as the maximal overhang of any read
spanning the junction.
The score is the number of alignments spanning the junction, with a
maximum score of 1000 for UCSC browser compatibility.
If genome is supplied, BED is colored green for U2 junctions, blue for
U12, or red for unknown.
.RE
.PP
\f[CR]\-n FILE, \-\-intron\-bed=FILE\f[R]
.RS
.PP
Write the intron BED 9 with the bounds of the introns.
The score is the number of alignments spanning the junction, with a
maximum score of 1000 for UCSC browser compatibility.
If genome is supplied, BED is colored green for U2 junctions, blue for
U12, or red for unknown.
.RE
.PP
\f[CR]\-b FILE, \-\-intron\-bed6=FILE\f[R]
.RS
.PP
Write the intron BED 6 with the bounds of the introns.
The score is the number of alignments spanning the junction.
This is for software not wanting to create a browser track.
.RE
.PP
\f[CR]\-p FILE, \-\-pass\-through=FILE\f[R]
.RS
.PP
Pass through input BAM/SAM records to this file, used for constructing
pipelines with \f[CR]/dev/stdout\f[R] is specified.
CRAM output is not support, these will be written as BAM.
.RE
.PP
\f[CR]\-D FILE, \-\-debug\-trace=FILE\f[R]
.RS
.PP
Output records, in TSV format, for reach read intron indicating the
information going into classifying it, including read name.
First few columns are BED\-like for easy conversion.
# NOTES The computation of strand is problematic.
If the strandness of the experiment is specified, then that is used to
determine stand.
If the alignment provides the XS attribute, that is used.
Otherwise, the strand can\[cq]t be determined from the BAM.
If the genome is provided and a known splice sites are detected, this is
then used if the stand is not identified by other methods.
.RE
.PP
Secondary alignments are not used to support introns.
.SH EXAMPLES
Call junctions from a BAM file, also creating BEDs of junctions and
introns:
.IP
.EX
intronProspector \-\-intron\-calls=introns.tsv \-\-junction\-bed=juncs.bed \-\-intron\-bed=introns.bed reads.bam
.EE
.PP
Pipeline to call introns and create a CRAM file:
.IP
.EX
cat reads.sam \[rs]
    | samtools sort \-O sam  \[rs]
    | ./intronProspector \-c introns.tsv \-p /dev/stdout \[rs]
    | samtools view \-O CRAM \-T grch38.fa >reads.cram
.EE
.PP
Note that the \f[CR]cat\f[R] command could be an aligner output a SAM
file and that the genome FASTA file must be index by
\f[CR]samtools faidx\f[R].
.SH BUGS
See GitHub Issues: \c
.UR https://github.com/diekhans/intronProspector/issues
.UE \c
.SH AUTHOR
Mark Diekhans \c
.MT markd@ucsc.edu
.ME \c
.PP
Source available from \c
.UR https://github.com/diekhans/intronProspector
.UE \c
.PP
Base on code from RegTools \c
.UR https://github.com/griffithlab/regtools
.UE \c
\ by Avinash Ramu \c
.MT aramu@genome.wustl.edu
.ME \c
\&.
.SH AUTHORS
Mark Diekhans.
